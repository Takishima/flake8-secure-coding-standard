---

name: CI

on:
  pull_request:
  push:
    branches:
      - main
      - develop
      - v*

jobs:
  standard:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-latest, windows-latest, macos-latest]
        python:
          - 3.8
          - 3.9
          - '3.10'
          - '3.11'

    name: "🐍 ${{ matrix.python }} • ${{ matrix.runs-on }} • x64 ${{ matrix.args }}"
    runs-on: ${{ matrix.runs-on }}
    if: >-
      (github.event_name != 'pull_request'
        || (github.event_name == 'pull_request' && github.event.pull_request.merged != true))

    steps:
      - uses: actions/checkout@v3

      - name: Get history and tags for SCM versioning to work
        run: |
          git fetch --prune --unshallow
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}
          architecture: 'x64'
          cache: 'pip'
          cache-dependency-path: '**/setup.cfg'

      - name: Prepare env
        run: |
          python -m pip install -U wheel coveralls

      - name: Setup annotations on Linux
        if: runner.os == 'Linux'
        run: python -m pip install pytest-github-actions-annotate-failures

      - name: Build and install package
        run: python -m pip install -e .[test]

      - name: Run tests
        run: python -m pytest -v --cov=flake8_secure_coding_standard

      - name: Coveralls.io
        run: coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: python-${{ matrix.python }}-${{ matrix.runs-on }}-x64
          COVERALLS_PARALLEL: true

  finish:
    needs: standard
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
      - name: Coveralls Finished
        run: |
          pip3 install --upgrade coveralls
          coveralls --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
